/*
 * The internal definitions
 *
 * Copyright (C) 2011, Joachim Metz <jbmetz@users.sourceforge.net>
 *
 * Refer to AUTHORS for acknowledgements.
 *
 * This software is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with this software.  If not, see <http://www.gnu.org/licenses/>.
 */

#if !defined( _LIBBDE_INTERNAL_DEFINITIONS_H )
#define _LIBBDE_INTERNAL_DEFINITIONS_H

#include <common.h>
#include <byte_stream.h>

#define LIBBDE_ENDIAN_BIG				_BYTE_STREAM_ENDIAN_BIG
#define LIBBDE_ENDIAN_LITTLE				_BYTE_STREAM_ENDIAN_LITTLE

/* Define HAVE_LOCAL_LIBBDE for local use of libbde
 */
#if !defined( HAVE_LOCAL_LIBBDE )
#include <libbde/definitions.h>

/* The definitions in <libbde/definitions.h> are copied here
 * for local use of libbde
 */
#else
#define LIBBDE_VERSION					@VERSION@

/* The version string
 */
#define LIBBDE_VERSION_STRING				"@VERSION@"

/* The file access
 * bit 1        set to 1 for read access
 * bit 2        set to 1 for write access
 * bit 3-8      not used
 */
enum LIBBDE_ACCESS_FLAGS
{
	LIBBDE_ACCESS_FLAG_READ				= 0x01,
/* Reserved: not supported yet */
	LIBBDE_ACCESS_FLAG_WRITE			= 0x02
};

/* The file access macros
 */
#define LIBBDE_OPEN_READ				( LIBBDE_ACCESS_FLAG_READ )
/* Reserved: not supported yet */
#define LIBBDE_OPEN_WRITE				( LIBBDE_ACCESS_FLAG_WRITE )
/* Reserved: not supported yet */
#define LIBBDE_OPEN_READ_WRITE				( LIBBDE_ACCESS_FLAG_READ | LIBBDE_ACCESS_FLAG_WRITE )

/* The version
 */
enum LIBBDE_VERSIONS
{
	LIBBDE_VERSION_WINDOWS_VISTA			= 6,
	LIBBDE_VERSION_WINDOWS_7			= 7,
	LIBBDE_VERSION_TO_GO				= (int) 'T'
};

/* The encryption methods
 */
enum LIBBDE_ENCRYPTION_METHODS
{
	LIBBDE_ENCRYPTION_METHOD_AES_128_CBC_DIFFUSER	= 0x00008000UL,
	LIBBDE_ENCRYPTION_METHOD_AES_256_CBC_DIFFUSER	= 0x00008001UL,
	LIBBDE_ENCRYPTION_METHOD_AES_128_CBC		= 0x00008002UL,
	LIBBDE_ENCRYPTION_METHOD_AES_256_CBC		= 0x00008003UL
};

#endif

/* The entry types
 */
enum LIBBDE_ENTRY_TYPES
{
	LIBBDE_ENTRY_TYPE_PROPERTY			= 0x0000,

	LIBBDE_ENTRY_TYPE_VOLUME_MASTER_KEY		= 0x0002,
	LIBBDE_ENTRY_TYPE_FULL_VOLUME_ENCRYPTION_KEY	= 0x0003,
	LIBBDE_ENTRY_TYPE_VALIDATION			= 0x0004,

	LIBBDE_ENTRY_TYPE_DESCRIPTION			= 0x0007,

	LIBBDE_ENTRY_TYPE_VOLUME_HEADER_BLOCK		= 0x000f,
};

/* TODO 0x000b
 */

/* The value types
 */
enum LIBBDE_VALUE_TYPES
{
	LIBBDE_VALUE_TYPE_ERASED			= 0x0000,
	LIBBDE_VALUE_TYPE_KEY				= 0x0001,
	LIBBDE_VALUE_TYPE_UNICODE_STRING		= 0x0002,
	LIBBDE_VALUE_TYPE_STRETCH_KEY			= 0x0003,
	LIBBDE_VALUE_TYPE_USE_KEY			= 0x0004,
	LIBBDE_VALUE_TYPE_AES_CCM_ENCRYPTED_KEY		= 0x0005,
	LIBBDE_VALUE_TYPE_TPM_ENCODED_KEY		= 0x0006,
	LIBBDE_VALUE_TYPE_VALIDATION			= 0x0007,
	LIBBDE_VALUE_TYPE_VOLUME_MASTER_KEY		= 0x0008,
	LIBBDE_VALUE_TYPE_EXTERNAL_KEY			= 0x0009,
	LIBBDE_VALUE_TYPE_UPDATE			= 0x000a,
	LIBBDE_VALUE_TYPE_ERROR				= 0x000b,

	LIBBDE_VALUE_TYPE_OFFSET_AND_SIZE		= 0x000f
};

/* The volume master key types
 */
enum LIBBDE_VMK_TYPES
{
	LIBBDE_VMK_TYPE_TPM_PROTECTED			= 0x01000000UL,

	LIBBDE_VMK_TYPE_RECOVERY_KEY_PROTECTED		= 0x08000000UL,

	LIBBDE_VMK_TYPE_EXTERNAL_KEY_PROTECTED		= 0x20000000UL
};

#define LIBBDE_MAXIMUM_CACHE_ENTRIES_SECTORS		16

#endif

